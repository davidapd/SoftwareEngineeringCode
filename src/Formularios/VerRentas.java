/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import BD.Conexion;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dape
 */
public class VerRentas extends javax.swing.JFrame {

    /**
     * Creates new form VerRentas
     */
    Conexion baseDatos = new Conexion().conectar();
   

    public VerRentas() {
        initComponents();
        setLocationRelativeTo(null);
        cargartabla();
        jTable1.changeSelection(0, 0, false, false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextFieldBusqueda = new javax.swing.JTextField();
        ButtonBuscar = new javax.swing.JToggleButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonModificar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonSalir = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 255));
        jLabel1.setText("Gestionar Rentas");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/LOGO1.png"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 0, 204));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 255));
        jLabel2.setText("Ver Rentas");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/LOGO1.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
        );

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Buscar Renta");

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Id Renta" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTextFieldBusqueda.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBusquedaActionPerformed(evt);
            }
        });
        jTextFieldBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBusquedaKeyTyped(evt);
            }
        });

        ButtonBuscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ButtonBuscar.setText("Buscar");
        ButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBuscarActionPerformed(evt);
            }
        });

        jButtonEliminar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonModificar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(jTable1);

        jButtonSalir.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(ButtonBuscar)
                .addGap(40, 40, 40)
                .addComponent(jButtonEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonModificar)
                .addGap(72, 72, 72))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSalir)
                .addGap(378, 378, 378))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonBuscar)
                    .addComponent(jButtonEliminar)
                    .addComponent(jButtonModificar))
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonSalir)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBusquedaActionPerformed

    private void ButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBuscarActionPerformed
        // TODO add your handling code here:
        boolean exixte = false;
        String buscar = (String) jComboBox1.getSelectedItem();
        
        String hayDatos=jTextFieldBusqueda.getText();
        
        if (!hayDatos.isEmpty()) {
            
        
        
        
        if (buscar.equals("Nombre")) {

            String busqueda = jTextFieldBusqueda.getText();

            DefaultTableModel modelo = new DefaultTableModel();
            this.jTable1.setModel(modelo);
            modelo.addColumn("id");
            modelo.addColumn("Nombre");
            modelo.addColumn("Apellido");
            modelo.addColumn("Sillas");
            modelo.addColumn("Mesas");
            modelo.addColumn("Fecha");
            modelo.addColumn("Calle");
            modelo.addColumn("Colonia");
            modelo.addColumn("#");
            modelo.addColumn("Referencia");
            ResultSet rs = baseDatos.consultar("SELECT * FROM RENTAS_TABLA  WHERE Renta_nombre_usuario= '" + busqueda + "'");

            try {
                while (rs.next()) {

                    int id = rs.getInt("idRenta");
                    String nombre = rs.getString("Renta_nombre_usuario");
                    String apellido = rs.getString("Renta_apellido_usuario");
                    int sillas = rs.getInt("Renta_cantidad_sillas");
                    int mesas = rs.getInt("Renta_cantidad_mesas");
                    Date fecha = rs.getDate("Renta_fechaEntrega");
                    String calle = rs.getString("Renta_direccion_usuario_calle");
                    String colonia = rs.getString("Renta_direccion_colonia");
                    String num = rs.getString("Renta_direccion_numeroExt");
                    String ref = rs.getString("Renta_direccion_referencias");

                    Vector v = new Vector();

                    v.add(id);
                    v.add(nombre);
                    v.add(apellido);
                    v.add(sillas);
                    v.add(mesas);
                    v.add(fecha);
                    v.add(calle);
                    v.add(colonia);
                    v.add(num);
                    v.add(ref);
                    modelo.addRow(v);
                    exixte = true;
                }
                rs.close();
                if (!exixte) {
                    JOptionPane.showMessageDialog(null, "No se encontaron registros con el nombre");
                    cargartabla();
                }

            } catch (Exception ex) {

                JOptionPane.showMessageDialog(null, "No se encontaron registros");

            }

        } else {
            
  try {
            int busqueda = Integer.parseInt(jTextFieldBusqueda.getText());

            DefaultTableModel modelo = new DefaultTableModel();
            this.jTable1.setModel(modelo);
            modelo.addColumn("id");
            modelo.addColumn("Nombre");
            modelo.addColumn("Apellido");
            modelo.addColumn("Sillas");
            modelo.addColumn("Mesas");
            modelo.addColumn("Fecha");
            modelo.addColumn("Calle");
            modelo.addColumn("Colonia");
            modelo.addColumn("#");
            modelo.addColumn("Referencia");
            ResultSet rs = baseDatos.consultar("SELECT * FROM RENTAS_TABLA  WHERE idRenta= '" + busqueda + "'");

          
                while (rs.next()) {

                    int id = rs.getInt("idRenta");
                    String nombre = rs.getString("Renta_nombre_usuario");
                    String apellido = rs.getString("Renta_apellido_usuario");
                    int sillas = rs.getInt("Renta_cantidad_sillas");
                    int mesas = rs.getInt("Renta_cantidad_mesas");
                    Date fecha = rs.getDate("Renta_fechaEntrega");
                    String calle = rs.getString("Renta_direccion_usuario_calle");
                    String colonia = rs.getString("Renta_direccion_colonia");
                    String num = rs.getString("Renta_direccion_numeroExt");
                    String ref = rs.getString("Renta_direccion_referencias");

                    Vector v = new Vector();

                    v.add(id);
                    v.add(nombre);
                    v.add(apellido);
                    v.add(sillas);
                    v.add(mesas);
                    v.add(fecha);
                    v.add(calle);
                    v.add(colonia);
                    v.add(num);
                    v.add(ref);
                    modelo.addRow(v);
                    exixte = true;
                }
                rs.close();
                if (!exixte) {
                    JOptionPane.showMessageDialog(null, "No se encontaron registros con el id");
                    cargartabla();
                }

            } catch (Exception ex) {

                JOptionPane.showMessageDialog(null, "No se encontaron registros con el id");

            }

        }

        }else{
             JOptionPane.showMessageDialog(null, "Ingresa un nombre o un id");
        }
        
        jTable1.changeSelection(0, 0, false, false);  
        
    }//GEN-LAST:event_ButtonBuscarActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
         // TODO add your handling code here:

        GestionarRentas menuP = new GestionarRentas();
        menuP.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonSalirActionPerformed

     public static int id = 0;
    
    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        // TODO add your handling code here:
        
        int fila = jTable1.getSelectedRow();
        int dato = (int) jTable1.getValueAt(fila, 0);
        id = dato;

        ModificarRenta menuP = new ModificarRenta();
        menuP.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:

        int fila = jTable1.getSelectedRow();
        int dato = (int) jTable1.getValueAt(fila, 0);

        int confirmar = JOptionPane.showConfirmDialog(null, "Desea borrar la renta?");
        if (confirmar == 0) {

            boolean sentencia;
            sentencia = baseDatos.ejecutar("DELETE FROM RENTAS_TABLA WHERE idRenta =  " + dato + " ");

            if (sentencia == true) {

                JOptionPane.showMessageDialog(null, "Se elimino correctamente");

                cargartabla();
            } else {

                JOptionPane.showMessageDialog(null, "No se pudo eliminar");
            }
        }

      jTable1.changeSelection(0, 0, false, false);
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jTextFieldBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBusquedaKeyTyped
        // TODO add your handling code here:

        int key = evt.getKeyChar();

        /* boolean numeros = key >= 48 && key <= 57;

        if (numeros) {
            evt.consume();
        }*/
        if (jTextFieldBusqueda.getText().trim().length() == 9) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldBusquedaKeyTyped

    public void cargartabla() {

        DefaultTableModel modelo = new DefaultTableModel();
        this.jTable1.setModel(modelo);
        ResultSet rs = baseDatos.consultar("SELECT * FROM RENTAS_TABLA");

        try {
            //Obteniendo la informacion de las columnas que estan siendo consultadas
            ResultSetMetaData rsMd = rs.getMetaData();
            //La cantidad de columnas que tiene la consulta
            int cantidadColumnas = rsMd.getColumnCount();
            //Establecer como cabezeras el nombre de las colimnas
            /*  for (int i = 1; i <= cantidadColumnas; i++) {
             modelo.addColumn(rsMd.getColumnLabel(i));
            }*/
            modelo.addColumn("id");
            modelo.addColumn("Nombre");
            modelo.addColumn("Apellido");
            modelo.addColumn("Sillas");
            modelo.addColumn("Mesas");
            modelo.addColumn("Fecha");
            modelo.addColumn("Calle");
            modelo.addColumn("Colonia");
            modelo.addColumn("#");
            modelo.addColumn("Referencia");

            //Creando las filas para el JTable
            while (rs.next()) {

                int id = rs.getInt("idRenta");
                String nombre = rs.getString("Renta_nombre_usuario");
                String apellido = rs.getString("Renta_apellido_usuario");
                int sillas = rs.getInt("Renta_cantidad_sillas");
                int mesas = rs.getInt("Renta_cantidad_mesas");
                Date fecha = rs.getDate("Renta_fechaEntrega");
                String calle = rs.getString("Renta_direccion_usuario_calle");
                String colonia = rs.getString("Renta_direccion_colonia");
                String num = rs.getString("Renta_direccion_numeroExt");
                String ref = rs.getString("Renta_direccion_referencias");

                Vector v = new Vector();

                v.add(id);
                v.add(nombre);
                v.add(apellido);
                v.add(sillas);
                v.add(mesas);
                v.add(fecha);
                v.add(calle);
                v.add(colonia);
                v.add(num);
                v.add(ref);
                modelo.addRow(v);

            }
            rs.close();

        } catch (Exception ex) {

            System.out.println("no hay rentas para mostar");
            ex.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VerRentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VerRentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VerRentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VerRentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VerRentas().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton ButtonBuscar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldBusqueda;
    // End of variables declaration//GEN-END:variables
}
